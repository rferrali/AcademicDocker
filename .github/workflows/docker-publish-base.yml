name: Publish Base Docker Image
on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: rferrali/academic-docker-base
  VERSION: 1.0.0

jobs:
  build-base-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push base AMD64 image
        id: build-amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.base
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TL_SCHEME=${{ github.event_name == 'pull_request' && 'scheme-minimal' || 'scheme-full' }}

  build-base-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push base ARM64 image
        id: build-arm64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.base
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TL_SCHEME=${{ github.event_name == 'pull_request' && 'scheme-minimal' || 'scheme-full' }}

  merge-manifest:
    runs-on: ubuntu-latest
    needs:
      - build-base-amd64
      - build-base-arm64
    if: github.event_name != 'pull_request'
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and push multi-arch manifest
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}-arm64
